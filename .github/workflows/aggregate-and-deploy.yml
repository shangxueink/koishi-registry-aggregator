name: aggregate-and-deploy

on:
  schedule:
    # 每30分钟运行一次
    - cron: '*/30 * * * *'
  workflow_dispatch:
    # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # 设置权限
    permissions:
      contents: write
    
    steps:
      - name: 检出代码 🛎️
        uses: actions/checkout@v3

      - name: 设置 Node.js 环境
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: 安装 Yarn
        run: npm install -g yarn

      - name: 安装依赖
        run: yarn install

      - name: 运行聚合脚本
        run: node index.js
        working-directory: .

      - name: 配置 Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 部署到 gh-pages 分支
        run: |
          # 保存生成的 market.json 到临时位置
          cp market.json /tmp/market.json
          
          # 检查 gh-pages 分支是否存在
          if git ls-remote --heads origin gh-pages | grep -q 'gh-pages'; then
            echo "gh-pages 分支已存在，切换到该分支"
            git fetch origin gh-pages
            git checkout gh-pages
          else
            echo "创建新的 gh-pages 分支"
            git checkout --orphan gh-pages
          fi
          
          # 清空 gh-pages 分支的所有内容
          git rm -rf . || true
          
          # 将保存的 market.json 复制回来
          cp /tmp/market.json market.json
          
          # 添加并提交
          git add market.json
          
          # 提交更改
          git commit -m "更新 market.json [skip ci]" || echo "没有变更需要提交"
          
          # 推送到远程
          git push origin gh-pages
